COMENTARIOS SOBRE LA IMPLEMENTACIÓN DE LA INTERFAZ POR EL SERVIDOR
==================================================================

* La BBDD se ha iniciado con:
- La notificación con id "1234-1234" y estado "Creado"
- Dos trabajos con ids: "1234-1234" Y "1234-1235"

* En las excepciones el body solo contiene "detail". El "status" se comunica en la respuesta HTTP.

* Sobre POST notificacion
- El error 400 (identificador único ya existe) en principio no deberia producirse porque los identificadores se generan automáticamente. Y en caso de existir se devuelve como 422 - Error de integridad, facilitando más información en los detalles. Por ejemplo:

	Para identificador único ya existe
	{"detail": "Error de integridad: UNIQUE constraint failed: notificaciones.id"}

	Para identificador de trabajo no existe (foreign key)
	{"detail":"Error de integridad: FOREIGN KEY constraint failed"}

Si hace falta se podría distinguir entre 400 "identificador único ya existe" y 422 (restricción en foreign key) pero la solución sería dependiente de la BBDD pues habría que analizar el texto de error.

- El error 422 (sin atributo requerido) lo genera SQLAlchemy con esta respuesta:
{
  "detail": [
    {
      "loc": [
        "body",
        "id_trabajo"
      ],
      "msg": "field required",
      "type": "value_error.missing"
    }
  ]
}

* Se usan tokens jwt para autorizar las operaciones. El token jwt debe incluirse en la cabecera "authorization" como sigue:

Authorization: Bearer <token>

En caso de incluirse el token debe coincidir con al variable "jwt_notificaciones" del fichero de configuración .env o de lo contrario la petición se rechaza con el error 401 - UNAUTHORIZED. Las peticiones sin esta cabecera son siempre autorizadas.

- En las peticiones al API de trabajos se incluye un token jwt en la cabecera "authorization" como sigue:

Authorization: Bearer <token>

El valor del token se obtiene de la variable jwt_trabajos del fichero de configuración .env.

* El error 404 (notificacion no existe) en las operaciones DELETE no se genera (no lo hace SQLite al igual que otras BBDD).

* En el fichero de configuración .env se deben definir las siguientes variables:

# URL de la API de trabajos
URL_trabajos = "http://4.157.200.188:4014"

# Token jwt para la API de trabajos
jwt_trabajos = "eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImEzMmZkZDRiMTQ2Njc3NzE5YWIyMzcyODYxYmRlZDg5In0.eyJpc3MiOiJBT1MgMjAyMyAtIEFQSSBOb3RpZmljYWNpb25lcyIsImF1ZCI6ImFsZWphbmRyby5jYXJyYXNjby5hcmFnb25AYWx1bW5vcy51cG0uZXMiLCJzdWIiOiI5Mzc3NzE3YmVmNWE0OGMyODliYWEyZDI0MjM2N2NhNSIsImV4cCI6MTY4NDUyNDA2MywiaWF0IjoxNjg0NTIzNzYzfQ.TmP_jb4WF_mxl-lAauAFDCKLi-w2agpToTKpL5UbGMwuyn4RlVZdCM3EdNl-RZ1Yl7rfYl5N6KLb01hz1ThJVg"

# Token jwt para la API de notificaciones
jwt_notificaciones = "eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImEzMmZkZDRiMTQ2Njc3NzE5YWIyMzcyODYxYmRlZDg5In0.eyJpc3MiOiJBT1MgMjAyMyAtIEFQSSBOb3RpZmljYWNpb25lcyIsImF1ZCI6ImFsZWphbmRyby5jYXJyYXNjby5hcmFnb25AYWx1bW5vcy51cG0uZXMiLCJzdWIiOiI5Mzc3NzE3YmVmNWE0OGMyODliYWEyZDI0MjM2N2NhNSIsImV4cCI6MTY4NDUyNDA2MywiaWF0IjoxNjg0NTIzNzYzfQ.TmP_jb4WF_mxl-lAauAFDCKLi-w2agpToTKpL5UbGMwuyn4RlVZdCM3EdNl-RZ1Yl7rfYl5N6KLb01hz1ThJVg"

* El servidor incluye etag en la cabecera de las respuestas a las peticiones HTTP GET y POST y éste se calcula como la firma MD5 del resultado. El cliente puede incluir estos etags en las cabeceras de las peticiones (así como "If-Math" o "If-None-Match") aunque el servidor los ignora.
